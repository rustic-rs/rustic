name: Security audit

on:
  schedule:
    # Runs at 00:00 UTC everyday
    - cron: "0 0 * * *"
  push:
    paths:
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "crates/**/Cargo.toml"
      - "crates/**/Cargo.lock"
  pull_request:

jobs:
  audit:
    name: Audit dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      # Ensure that the latest version of Cargo is installed
      - name: Install Rust
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # v2
      - uses: actions-rs/audit-check@35b7b53b1e25b55642157ac01b4adceb5b9ebef3 # v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  cargo-deny:
    name: Run cargo-deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check bans licenses sources

  cargo-vet:
    name: Vet Dependencies
    runs-on: ubuntu-latest
    env:
      CARGO_VET_VERSION: 0.8.0
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        run: rustup update stable && rustup default stable

      - uses: actions/cache@v2
        with:
          path: ${{ runner.tool_cache }}/cargo-vet
          key: cargo-vet-bin-${{ env.CARGO_VET_VERSION }}

      - name: Add the tool cache directory to the search path
        run: echo "${{ runner.tool_cache }}/cargo-vet/bin" >> $GITHUB_PATH

      - name: Ensure that the tool cache is populated with the cargo-vet binary
        run: cargo install --root ${{ runner.tool_cache }}/cargo-vet --version ${{ env.CARGO_VET_VERSION }} cargo-vet

      - name: Invoke cargo-vet
        run: cargo vet --locked
