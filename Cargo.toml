[workspace.package]
version = "0.6.1"
edition = "2021"
license = "Apache-2.0 OR MIT"
repository = "https://github.com/rustic-rs/rustic"
homepage = "https://rustic.cli.rs/"
keywords = ["backup", "restic", "deduplication", "encryption", "cli"]
categories = ["command-line-utilities"]
description = """
rustic - fast, encrypted, deduplicated backups powered by Rust
"""

[package]
name = "rustic-rs"
version = { workspace = true }
authors = ["Alexander Weiss"]
categories = { workspace = true }
documentation = "https://docs.rs/rustic-rs"
edition = { workspace = true }
homepage = { workspace = true }
include = ["src/**/*", "LICENSE-*", "README.md", "config/**/*"]
keywords = { workspace = true }
license = { workspace = true }
readme = "README.md"
repository = { workspace = true }
resolver = "2"
rust-version = "1.70.0"
description = { workspace = true }

[workspace]
members = ["crates/rustic_testing", "xtask"]

[features]
default = ["self-update"]
mimalloc = ["dep:mimalloc"]
jemallocator = ["dep:jemallocator-global"]
self-update = ["dep:self_update", "dep:semver"]

[[bin]]
name = "rustic"
path = "src/bin/rustic.rs"
test = true
bench = true
doc = true
harness = true
edition = "2021"
# required-features = []

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--document-private-items", "--generate-link-to-definition"]

[dependencies]
abscissa_core = { workspace = true }
rustic_core = { workspace = true }

# errors
anyhow = { workspace = true }
thiserror = { workspace = true }

# logging
log = { workspace = true }

# serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }

# other dependencies
chrono = { workspace = true }
self_update = { workspace = true, optional = true }
semver = { workspace = true, optional = true }

# commands
clap = { workspace = true }
clap_complete = { workspace = true }
merge = { workspace = true }

bytesize = { workspace = true }
comfy-table = { workspace = true }
dialoguer = { workspace = true }
directories = { workspace = true }
gethostname = { workspace = true }
humantime = { workspace = true }
indicatif = { workspace = true }
itertools = { workspace = true }
jemallocator-global = { version = "0.3.2", optional = true }
mimalloc = { version = "0.1.39", default_features = false, optional = true }
rhai = { workspace = true }
simplelog = { workspace = true }

[dev-dependencies]
abscissa_core = { workspace = true, features = ["testing"] }
aho-corasick = { workspace = true }
dircmp = { workspace = true }
once_cell = { workspace = true }
pretty_assertions = { workspace = true }
rustic_testing = { path = "crates/rustic_testing" }
tempfile = { workspace = true }
toml = { workspace = true }

[target.'cfg(not(windows))'.dependencies]
libc = "0.2.150"
[workspace.dependencies]
rustic_core = { version = "0.1.2", features = ["cli"] }
abscissa_core = { version = "0.7.0", default-features = false, features = ["application"] }

# logging
log = "0.4"

# errors
displaydoc = "0.2.4"
thiserror = "1"
anyhow = "1"

# serialization
serde = { version = "1", features = ["serde_derive"] }
serde_with = { version = "3.4", features = ["base64"] }
serde_json = "1"

# other dependencies
aho-corasick = "1.1.2"
chrono = { version = "0.4", default-features = false, features = ["clock", "serde"] }
rhai = { version = "1.16", features = ["sync", "serde", "no_optimize", "no_module", "no_custom_syntax", "only_i64"] }
semver = "1"
simplelog = "0.12"
comfy-table = "7.1.0"

# commands
merge = "0.1"
directories = "5"
dialoguer = "0.11.0"
indicatif = "0.17"
gethostname = "0.4"
bytesize = "1"
itertools = "0.12"
humantime = "2"
clap_complete = "4"
clap = { version = "4", features = ["derive", "env", "wrap_help"] }
once_cell = "1.18"
self_update = { version = "0.39", default-features = false, features = ["rustls", "archive-tar", "compression-flate2"] }

# dev dependencies
rstest = "0.18"
quickcheck = "1"
quickcheck_macros = "1"
tempfile = "3.8"
pretty_assertions = "1.4"
toml = "0.8"
dircmp = "0.2"

# cargo-binstall support
# https://github.com/cargo-bins/cargo-binstall/blob/HEAD/SUPPORT.md
[package.metadata.binstall]
pkg-url = "{ repo }/releases/download/v{ version }/{ repo }-v{ version }-{ target }{ archive-suffix }"
bin-dir = "{ bin }-{ target }/{ bin }{ binary-ext }"
pkg-fmt = "tgz"

[package.metadata.binstall.signing]
algorithm = "minisign"
pubkey = "RWSWSCEJEEacVeCy0va71hlrVtiW8YzMzOyJeso0Bfy/ZXq5OryWi/8T"

# see: https://nnethercote.github.io/perf-book/build-configuration.html
[profile.dev]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

# compile dependencies with optimizations in dev mode
# see: https://doc.rust-lang.org/stable/cargo/reference/profiles.html#overrides
[profile.dev.package."*"]
opt-level = 3
debug = true

[profile.release]
opt-level = 3
debug = false # true for profiling
rpath = false
lto = "fat"
debug-assertions = false
codegen-units = 1
strip = true
panic = "abort"

[profile.test]
opt-level = 1
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

[profile.bench]
opt-level = 3
debug = true # true for profiling
rpath = false
lto = true
debug-assertions = false
codegen-units = 1

# Allows quick RPM file generation, if "cargo-generate-rpm" is installed:
#  cargo build --release; cargo generate-rpm
# will result in a file like target/generate-rpm/rustic-rs-0.6.1-1.x86_64.rpm
[package.metadata.generate-rpm]
assets = [
  { source = "target/release/rustic", dest = "/usr/bin/rustic", mode = "0755", config = false, doc = false, user = "root", group = "root" },
]
