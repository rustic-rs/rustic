[package]
name = "rustic_core"
version = "0.6.0"
authors = ["Alexander Weiss"]
categories = [
  "Algorithms",
  "Command line utilities",
  "Compression",
  "Cryptography",
  "Data structures",
  "Filesystem",
]
edition = { workspace = true }
homepage = { workspace = true }
include = ["src/**/*", "LICENSE-*", "README.md", "examples/**/*"]
keywords = ["backup", "restic", "deduplication", "encryption", "library"]
license = { workspace = true }
publish = false # Don't publish until we fix/stabilize public api!!!
readme = "README.md"
resolver = "2"
rust-version = "1.66.1"
description = { workspace = true }

[lib]
path = "src/lib.rs"
name = "rustic_core"
test = true
doctest = true
bench = true
doc = true
harness = true
edition = "2021"

[features]
default = []
cli = ["merge", "clap"]
merge = ["dep:merge"]
clap = ["dep:clap", "dep:clap_complete"]

[dependencies]
# errors
displaydoc = { workspace = true }
thiserror = { workspace = true }

# macros
derivative = { workspace = true }
derive_more = { workspace = true }
derive_setters = { workspace = true }

# logging
log = { workspace = true }

# parallelize
crossbeam-channel = { workspace = true }
pariter = { workspace = true }
rayon = { workspace = true }

# crypto
aes256ctr_poly1305aes = { workspace = true }
rand = { workspace = true }
scrypt = { workspace = true }

# chunker / packer
integer-sqrt = { workspace = true }

# serialization
binrw = { workspace = true }
hex = { workspace = true }
serde = { workspace = true }
serde-aux = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }

# other dependencies
bytes = { workspace = true }
chrono = { workspace = true }
enum-map = { workspace = true }
enum-map-derive = { workspace = true }
zstd = { workspace = true }

# local backend
aho-corasick = { workspace = true }
cached = { workspace = true }
filetime = { workspace = true }
ignore = { workspace = true }
nix = { workspace = true }
walkdir = { workspace = true }

# rest backend
backoff = { workspace = true }
reqwest = { workspace = true }
url = { workspace = true }

# rclone backend
semver = { workspace = true }

# cache
cachedir = { workspace = true }
dirs = { workspace = true }

# cli
clap = { workspace = true, optional = true }
clap_complete = { workspace = true, optional = true }

bytesize = { workspace = true }
directories = { workspace = true }
dunce = { workspace = true }
gethostname = { workspace = true }
humantime = { workspace = true }
itertools = { workspace = true }
merge = { workspace = true, optional = true }
path-dedot = { workspace = true }
shell-words = { workspace = true }

[target.'cfg(not(windows))'.dependencies]
sha2 = { version = "0.10", features = ["asm"] }

[target.'cfg(windows)'.dependencies]
# unfortunately, the asm extensions do not build on MSVC, see https://github.com/RustCrypto/asm-hashes/issues/17
sha2 = "0.10"

[target.'cfg(not(any(windows, target_os="openbsd")))'.dependencies]
xattr = "1"

[dev-dependencies]
expect-test = "1.4.1"
pretty_assertions = { workspace = true }
public-api = "0.31.3"
quickcheck = { workspace = true }
quickcheck_macros = { workspace = true }
rstest = { workspace = true }
rustdoc-json = "0.8.7"
rustup-toolchain = "0.1.4"
simplelog = { workspace = true }

[profile.dev]
opt-level = 0
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

[profile.release]
opt-level = 3
debug = false # true for profiling
rpath = false
lto = "fat"
debug-assertions = false
codegen-units = 1
strip = true

[profile.test]
opt-level = 1
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

[profile.bench]
opt-level = 3
debug = true # true for profiling
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
